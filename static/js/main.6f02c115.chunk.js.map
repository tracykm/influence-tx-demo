{"version":3,"sources":["theme.js","ScrollToTop.js","utils.js","components/TexasDistrictMap.js","components/FilterSection.js","styles.js","components/PaginatedList.js","components/LegislatorList.js","components/LegislatorsPage.js","components/Logo.js","components/FindReps.js","components/DonutChart.js","components/BillList.js","components/BillsPage.js","components/DonorList.js","components/DonorsPage.js","components/PolicyAreasPage.js","components/SimpleTabs.js","components/CustomLink.js","components/LegislatorDetailPage.js","components/DonorDetailPage.js","components/BillDetailPage.js","components/SearchAll.js","components/useDebounce.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["legTheme","createMuiTheme","typography","button","textTransform","palette","primary","dark","main","light","ScrollToTop","children","history","useHistory","useEffect","window","scrollTo","location","dashesToSpaces","str","capitalize","split","join","i","x","toLowerCase","length","toUpperCase","substr","numberWithCommas","toString","replace","formatMoney","money","Math","round","QUERY_OPTS","parseBooleans","arrayFormat","parseNumbers","getQueryString","queryString","parse","search","setQueryString","queryObj","add","oldQueryObj","push","stringify","ALL_LEG","gql","TexasDistrictMap","district","chamber","useState","tooltipContent","setTooltipContent","data","useQuery","legData","legislators","edges","reduce","acc","d","node","HOUSE","SENATE","sort","l1","l2","geography","Texas_State_House_Districts","Texas_State_Senate_Districts","data-tip","width","height","projection","zoom","center","arg","geographies","map","geo","leg","key","rsmKey","onMouseEnter","name","onMouseLeave","onClick","pk","style","default","fill","stroke","hover","outline","pressed","FilterChip","value","group","selected","onToggle","page","after","before","Chip","label","color","onDelete","undefined","marginBottom","SocialButtons","IconButton","open","href","FilterSection","tags","title","otherParams","first","last","isUsingFilters","Object","keys","isFilterOpen","onChangeFilterOpen","isShareOpen","onChangeShareOpen","Collapse","in","textAlign","display","justifyContent","marginLeft","Button","fontSize","Typography","variant","paddingRight","t","BlankLoadingLine","styled","div","p","RoundSquare","ImageSquare","photoUrl","backgroundImage","backgroundSize","BillSquare","billId","number","lineHeight","paddingTop","StyleWrapper","getProp","obj","propName","includes","o","zeroPageInfo","PaginatedList","props","gqlQuery","FetchingList","totalCount","SimpleList","rows","columns","url","emptyState","sortOrderText","hidePagination","rowsPerPage","gqlVariables","onDataFetched","nestedUnder","onSetPageVars","pageVars","variables","loading","error","values","pageInfo","startCursor","endCursor","totalPages","ceil","className","alignContent","class","padding","aria-label","disabled","ShortLoadingListItem","TableRow","TableCell","ShortLoadingListBody","TableBody","Array","apply","row","LoadingListItem","LoadingListBody","showHover","loadingListBody","TableContainer","margin","opacity","Table","e","c","render","field","PARTIES","R","D","I","LegislatorsList","rowData","party","LegislatorsPage","document","flexGrow","LogoWrapper","header","Logo","to","GOOGLE_API","process","REACT_APP_GOOGLE_API_KEY","GET_LEG_BY_DISTRICT","FindRepResults","query","houseData","house","senateData","senate","marginTop","FindReps","isLoaded","setIsLoaded","onLoad","onPlaceSelected","formatted_address","params","address","includeOffices","roles","fetch","then","res","json","divisions","forEach","trim","types","Wrapper","DonutChart","totalText","selectedSlice","cx","CHART_WIDTH","cy","paddingAngle","dataKey","innerRadius","outerRadius","entry","index","y","textAnchor","BillList","actionDates","float","format","Date","date","ALL_BILLS","BillsPage","listData","setListData","billClassificationStats","classificationTags","summaryData","count","minWidth","multipleSponsors","classification","bills","DonorList","getInitials","fullName","occupation","employer","totalContributions","city","state","ALL_DONORS","DonorsPage","donors","inState","PolicyAreasPage","TabWrapper","TabPanel","other","component","role","hidden","id","aria-labelledby","Box","SimpleTabs","tabs","startTabIdx","saveToUrl","React","setValue","tabQueryString","tab","position","Tabs","indicatorColor","textColor","onChange","event","newValue","Tab","content","CustomLink","cursor","GET_LEG","LegislatorDetailPage","useParams","legislator","fullLegData","size","target","contributions","donor","cycleTotal","billsSponsored","GET_DONOR","DonorDetailPage","fullDonorData","donations","background","legId","candidateName","office","GET_BILL","BillDetailPage","bill","fullBillData","reverse","session","billText","subjects","subject","parens","description","sponsors","ALL_SEARCH","LEG_SEARCH","BILL_SEARCH","DONOR_SEARCH","SearchResults","searchQuery","SearchAll","pathname","searchVal","setSearchVal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","Input","placeholder","startAdornment","InputAdornment","fullWidth","Nav","Routes","path","client","ApolloClient","uri","App","basename","theme","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f02c115.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const legTheme = createMuiTheme({\n  typography: {\n    button: {\n      textTransform: 'none',\n    },\n  },\n  palette: {\n    primary: { dark: '#337168', main: '#3b9185', light: '#dbf1ed' },\n  },\n})\n\nexport const billTheme = createMuiTheme({\n  palette: {\n    primary: { dark: '#993333', main: '#cc6665', light: '#e7b3b3' },\n  },\n})\n\nexport const donorTheme = createMuiTheme({\n  palette: {\n    primary: { dark: '#2d3f77', main: '#344d99', light: '#d9dff3' },\n  },\n})\n","import { useHistory } from 'react-router-dom'\nimport { useEffect } from 'react'\n\nexport default function ScrollToTop({ children }) {\n  const history = useHistory()\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [history.location])\n\n  return children\n}\n","import queryString from 'query-string'\n\nexport function dashesToSpaces(str) {\n  if (!str) return ''\n  return capitalize(str.split('-').join(' '))\n}\n\nexport function capitalize(str) {\n  if (!str) return ''\n  str = str.toLowerCase().split(' ')\n\n  for (let i = 0, x = str.length; i < x; i++) {\n    str[i] = str[i][0].toUpperCase() + str[i].substr(1)\n  }\n\n  return str.join(' ')\n}\n\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport function formatMoney(money) {\n  return '$' + numberWithCommas(Math.round(money))\n}\n\nconst QUERY_OPTS = {\n  // important that parse and stringify always share same options\n  parseBooleans: true,\n  arrayFormat: 'bracket',\n  parseNumbers: true,\n}\nexport function getQueryString(history) {\n  return queryString.parse(history.location.search, QUERY_OPTS)\n}\nexport function setQueryString(queryObj, history, add = false) {\n  if (add) {\n    const oldQueryObj = getQueryString(history)\n    queryObj = { ...oldQueryObj, ...queryObj }\n  }\n  history.push('?' + queryString.stringify(queryObj, QUERY_OPTS))\n}\n\nexport function getDebugQuery() {\n  if (process.env.NODE_ENV === 'production') return ''\n  return `\n    _debug {\n      sql {\n        duration\n        sql\n      }\n    }\n  `\n}\n","import React, { useState } from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from 'react-simple-maps'\nimport ReactTooltip from 'react-tooltip'\nimport { gql } from 'apollo-boost'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useHistory } from 'react-router-dom'\n\nimport Texas_State_Senate_Districts from 'data/Texas_State_Senate_Districts_Simplified'\nimport Texas_State_House_Districts from 'data/Texas_State_House_Districts_Simplified'\nimport { capitalize, getDebugQuery } from 'utils'\nimport { legTheme } from 'theme'\n\nconst ALL_LEG = gql`\n  {\n    legislators {\n      edges {\n        node {\n          district\n          pk\n          chamber\n          name\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nexport default function TexasDistrictMap({ district, chamber = 'HOUSE' }) {\n  const [tooltipContent, setTooltipContent] = useState('')\n  const { data } = useQuery(ALL_LEG)\n  const history = useHistory()\n  const legData = data\n    ? data.legislators.edges.reduce(\n        (acc, d) => {\n          acc[d.node.chamber].push(d.node)\n          return acc\n        },\n        { HOUSE: [], SENATE: [] },\n      )\n    : { HOUSE: [], SENATE: [] }\n  legData.HOUSE.sort((l1, l2) => l1.district - l2.district)\n  legData.SENATE.sort((l1, l2) => l1.district - l2.district)\n  const geography =\n    chamber === 'HOUSE'\n      ? Texas_State_House_Districts\n      : Texas_State_Senate_Districts\n  return (\n    <div>\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\n      <ComposableMap\n        data-tip=\"\"\n        width={400}\n        height={350}\n        projection=\"geoAlbersUsa\"\n      >\n        <ZoomableGroup zoom={1.5} center={[-100, 31]}>\n          <Geographies geography={geography}>\n            {(arg) => {\n              return arg.geographies.map((geo, i) => {\n                const leg = legData[chamber][i] || {}\n\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      setTooltipContent(\n                        `${capitalize(chamber)} District ${leg.district} ${\n                          leg.name\n                        }`,\n                      )\n                    }}\n                    onMouseLeave={() => {\n                      setTooltipContent('')\n                    }}\n                    onClick={() => {\n                      history.push(`/legislators/legislator/${leg.pk}`)\n                    }}\n                    style={{\n                      default: {\n                        fill: district\n                          ? leg.district === district\n                            ? legTheme.palette.primary.main\n                            : 'white'\n                          : '#D6D6DA',\n                        stroke:\n                          district && leg.district === district\n                            ? legTheme.palette.primary.main\n                            : '#EAEAEC',\n                      },\n                      hover: {\n                        fill: legTheme.palette.primary.main,\n                        outline: 'none',\n                      },\n                      pressed: {\n                        fill: legTheme.palette.primary.main,\n                        outline: 'none',\n                      },\n                    }}\n                  />\n                )\n              })\n            }}\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport Twitter from '@material-ui/icons/Twitter'\nimport LinkedIn from '@material-ui/icons/LinkedIn'\nimport Facebook from '@material-ui/icons/Facebook'\nimport FilterListRounded from '@material-ui/icons/FilterListRounded'\nimport ShareRounded from '@material-ui/icons/ShareRounded'\nimport {\n  Button,\n  IconButton,\n  Collapse,\n  Chip,\n  Typography,\n} from '@material-ui/core'\nimport { getQueryString, setQueryString } from 'utils'\nimport { useHistory } from 'react-router-dom'\n\nfunction FilterChip({ name, value, group }) {\n  const history = useHistory()\n  const queryObj = getQueryString(history)\n  const selected = queryObj[group] === value\n  const onToggle = () => {\n    if (selected) {\n      delete queryObj[group]\n    } else {\n      queryObj[group] = value\n    }\n    // reset page to first\n    queryObj.page = 1\n    delete queryObj.after\n    delete queryObj.before\n    setQueryString(queryObj, history)\n  }\n\n  return (\n    <>\n      <Chip\n        label={name}\n        color={selected ? 'primary' : 'default'}\n        onClick={onToggle}\n        onDelete={selected ? onToggle : undefined}\n        style={{ marginBottom: '.5em' }}\n      />{' '}\n    </>\n  )\n}\n\nfunction SocialButtons() {\n  return (\n    <>\n      <IconButton\n        onClick={() =>\n          window.open(\n            `https://www.facebook.com/share.php?u=${window.location.href}`,\n            '_blank',\n          )\n        }\n      >\n        <Facebook />\n      </IconButton>\n      <IconButton\n        onClick={() =>\n          window.open(\n            `https://twitter.com/intent/tweet?url=${window.location.href}`,\n            '_blank',\n          )\n        }\n      >\n        <Twitter />\n      </IconButton>\n      <IconButton\n        onClick={() =>\n          window.open(\n            `https://www.linkedin.com/shareArticle?url=${window.location.href}`,\n            '_blank',\n          )\n        }\n      >\n        <LinkedIn />\n      </IconButton>\n    </>\n  )\n}\n\nfunction FilterSection({ tags = [], title, ...props }) {\n  const history = useHistory()\n  const { page, first, after, last, before, ...otherParams } = getQueryString(\n    history,\n  )\n  const isUsingFilters = !!Object.keys(otherParams).length\n  const [isFilterOpen, onChangeFilterOpen] = useState(isUsingFilters)\n  const [isShareOpen, onChangeShareOpen] = useState(false)\n\n  return (\n    <div>\n      <Collapse in={isShareOpen} style={{ width: '100%', textAlign: 'right' }}>\n        <SocialButtons />\n      </Collapse>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        {title}\n\n        <div style={{ marginLeft: 'auto' }}>\n          <Button onClick={() => onChangeShareOpen(!isShareOpen)}>\n            <ShareRounded fontSize=\"small\" />{' '}\n            <Typography variant=\"h6\">Share</Typography>\n          </Button>\n          <Button onClick={() => onChangeFilterOpen(!isFilterOpen)}>\n            <FilterListRounded fontSize=\"small\" />{' '}\n            <Typography variant=\"h6\">Filter</Typography>\n          </Button>\n        </div>\n      </div>\n      <Collapse in={isFilterOpen}>\n        {Object.keys(tags).map((group) => {\n          return (\n            <div style={{ display: 'inline-block', paddingRight: '1rem' }}>\n              {tags[group].map((t) => (\n                <FilterChip key={t.value} {...t} group={group} />\n              ))}\n            </div>\n          )\n        })}\n      </Collapse>\n      <hr />\n    </div>\n  )\n}\n\nexport default FilterSection\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const BlankLoadingLine = styled.div`\n  background: #ddd;\n  width: ${(p) => p.width || '100%'};\n  height: 1em;\n  margin-bottom: 1em;\n`\n\nexport const RoundSquare = styled.div`\n  background: #ddd;\n  border-radius: 5px;\n  color: #888;\n  font-size: 2em;\n  width: 2.5em;\n  height: 2.5em;\n  line-height: 2.5em;\n  text-align: center;\n`\n\nexport const ImageSquare = ({ photoUrl }) => (\n  <RoundSquare\n    style={{\n      backgroundImage: `url(${photoUrl})`,\n      backgroundSize: 'cover',\n    }}\n  />\n)\n\nexport const BillSquare = ({ billId = '' }) => {\n  const [chamber, number] = billId.split(' ')\n\n  return (\n    <RoundSquare>\n      <div\n        style={{\n          lineHeight: 1,\n          paddingTop: '.5em',\n        }}\n      >\n        {chamber}\n      </div>\n      <div style={{ fontSize: '.6em', lineHeight: 1 }}>{number}</div>\n    </RoundSquare>\n  )\n}\n","import React, { useEffect } from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport { IconButton, Typography } from '@material-ui/core'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks'\nimport { RoundSquare, BlankLoadingLine } from 'styles'\nimport { getQueryString, setQueryString } from 'utils'\n\nconst StyleWrapper = styled.div`\n  /* margin-left: -1em;\n  width: calc(100% + 2em); */\n`\n\nfunction getProp(obj, propName) {\n  if (!propName || !obj) {\n    return\n  }\n  if (propName.includes('.')) {\n    return propName.split('.').reduce((o, i) => o && o[i], obj)\n  }\n  return obj[propName]\n}\nconst zeroPageInfo = {\n  page: null,\n  first: null,\n  last: null,\n  before: null,\n  after: null,\n}\n\nexport default function PaginatedList(props) {\n  if (props.gqlQuery) {\n    return <FetchingList {...props} />\n  } else {\n    const { edges, totalCount } = props.data || { edges: [], totalCount: 0 }\n    return (\n      <SimpleList\n        {...props}\n        totalCount={props.totalCount || totalCount}\n        rows={edges}\n      />\n    )\n  }\n}\n\nfunction FetchingList({\n  columns,\n  url,\n  pk = 'node.pk',\n  emptyState = 'None found',\n  title = '',\n  sortOrderText = '',\n  hidePagination = false,\n  rowsPerPage = 10,\n  gqlQuery,\n  gqlVariables = {},\n  onDataFetched,\n  /** where main list is. ex: 'search.legislators', needs to be a place with edges and pagination */\n  nestedUnder,\n  ...props\n}) {\n  const history = useHistory()\n  const queryObj = getQueryString(history)\n\n  function onSetPageVars(pageVars) {\n    let queryObj = getQueryString(history)\n    queryObj = { ...queryObj, ...pageVars }\n    setQueryString(queryObj, history)\n  }\n  // url is source of truth\n  // should allow set page from outside or in\n  const { data, loading, error } = useQuery(gqlQuery, {\n    variables: {\n      first: rowsPerPage,\n      ...queryObj,\n      ...gqlVariables,\n    },\n  })\n\n  useEffect(() => {\n    if (!data) return\n    if (onDataFetched) {\n      onDataFetched(data)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps*/\n  }, [data])\n\n  const baseList = nestedUnder\n    ? getProp(data, nestedUnder)\n    : Object.values(data || {})[0]\n  // don't care about the data.legislators.edges, will only call one top level each\n\n  const { edges, totalCount, pageInfo } = baseList || {\n    edges: [],\n    totalCount: 0,\n  }\n  const { startCursor, endCursor } = pageInfo || {}\n  const rows = edges\n  if (error) {\n    return 'server error'\n  }\n  const page = queryObj.page || 1\n  const totalPages = Math.ceil(totalCount / rowsPerPage)\n  return (\n    <StyleWrapper {...props}>\n      <SimpleList\n        {...{\n          title,\n          sortOrderText,\n          totalCount,\n          columns,\n          rows,\n          pk,\n          url,\n          loading,\n        }}\n      />\n      {totalCount > rowsPerPage && !hidePagination && (\n        <div\n          className=\"pagination\"\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignContent: 'baseline',\n          }}\n        >\n          <div class=\"scrollGradient\" />\n          <div style={{ padding: '1em' }}>{totalCount} Results </div>\n          <div>\n            Page {page} of {totalPages}\n            <IconButton\n              aria-label=\"Previous page\"\n              children={<ChevronLeft />}\n              disabled={page === 1}\n              onClick={() => {\n                const pageInfo = {\n                  ...zeroPageInfo,\n                  before: startCursor,\n                  last: rowsPerPage,\n                  page: page - 1,\n                }\n                onSetPageVars(pageInfo)\n              }}\n              title=\"Previous page\"\n            />\n            <IconButton\n              aria-label=\"Next page\"\n              children={<ChevronRight />}\n              disabled={page >= totalPages}\n              onClick={() => {\n                const pageInfo = {\n                  ...zeroPageInfo,\n                  after: endCursor,\n                  first: rowsPerPage,\n                  page: page + 1,\n                }\n                onSetPageVars(pageInfo)\n              }}\n              title=\"Next page\"\n            />\n          </div>\n        </div>\n      )}\n    </StyleWrapper>\n  )\n}\n\nconst ShortLoadingListItem = (\n  <TableRow>\n    <TableCell>\n      <BlankLoadingLine />\n    </TableCell>\n  </TableRow>\n)\n\nexport const ShortLoadingListBody = (\n  <TableBody>\n    {Array.apply(null, Array(9)).map((row, i) => ShortLoadingListItem)}\n  </TableBody>\n)\n\nexport const LoadingListItem = (\n  <TableRow>\n    <TableCell width={50}>\n      <RoundSquare />\n    </TableCell>\n    <TableCell style={{ width: '100%' }}>\n      <BlankLoadingLine width=\"50%\" />\n      <BlankLoadingLine width=\"80%\" />\n      <BlankLoadingLine />\n    </TableCell>\n  </TableRow>\n)\n\nconst LoadingListBody = (\n  <TableBody>\n    {Array.apply(null, Array(10)).map((row, i) => LoadingListItem)}\n  </TableBody>\n)\n\nfunction SimpleList({\n  totalCount,\n  rows,\n  columns,\n  url,\n  pk = 'node.pk',\n  emptyState = 'None found',\n  title = '',\n  sortOrderText = '',\n  hidePagination = false,\n  rowsPerPage = 10,\n  showHover,\n  loading,\n  loadingListBody = LoadingListBody,\n  ...props\n}) {\n  const history = useHistory()\n  return (\n    <StyleWrapper {...props}>\n      <TableContainer className=\"list\">\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            margin: '0 1em',\n          }}\n        >\n          <Typography variant=\"h6\">\n            {title}\n            <span\n              variant=\"subtitle2\"\n              style={{ fontSize: '.75em', opacity: 0.5, margin: '1em' }}\n            >\n              {loading ? 'loading' : `${totalCount} Results`}\n            </span>\n          </Typography>\n\n          <Typography variant=\"h6\">{sortOrderText}</Typography>\n        </div>\n        <Table aria-label=\"simple table\">\n          {loading ? (\n            loadingListBody\n          ) : (\n            <TableBody>\n              {rows.map((row, i) => (\n                <TableRow\n                  key={getProp(row, pk) || i}\n                  hover={showHover ? showHover(row) : !!url}\n                  onClick={\n                    url &&\n                    pk &&\n                    getProp(row, pk) &&\n                    ((e) => history.push(`/${url}/${getProp(row, pk)}`))\n                  }\n                >\n                  {columns.map((c, i) => {\n                    if (c.render) {\n                      return <TableCell key={i}>{c.render(row)}</TableCell>\n                    } else {\n                      return (\n                        <TableCell key={i}>{getProp(row, c.field)}</TableCell>\n                      )\n                    }\n                  })}\n                  {rows.length === 0 && emptyState}\n                </TableRow>\n              ))}\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n    </StyleWrapper>\n  )\n}\n","import React from 'react'\n\nimport PaginatedList from 'components/PaginatedList'\nimport { ImageSquare } from 'styles'\nimport { capitalize } from 'utils'\nimport Typography from '@material-ui/core/Typography'\n\nconst PARTIES = {\n  R: 'Republican',\n  D: 'Democrat',\n  I: 'Independent',\n}\n\nexport default function LegislatorsList({\n  data,\n  nestedUnder = 'legislators',\n  ...props\n}) {\n  return (\n    <PaginatedList\n      {...props}\n      url=\"legislators/legislator\"\n      data={data}\n      emptyState={<div>No legislators found</div>}\n      nestedUnder={nestedUnder}\n      columns={[\n        {\n          render: (rowData) => (\n            <div style={{ display: 'flex' }}>\n              <ImageSquare photoUrl={rowData.node.photoUrl} />\n              <div style={{ margin: '0 1em' }}>\n                <Typography>{rowData.node.name}</Typography>\n                <Typography variant=\"subtitle2\">\n                  {capitalize(rowData.node.chamber)}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                  {PARTIES[rowData.node.party] || rowData.node.party}\n                </Typography>\n              </div>\n            </div>\n          ),\n        },\n        {\n          field: 'node.party',\n          render: (rowData) => (\n            <div style={{ textAlign: 'right' }}>\n              District {rowData.node.district}\n            </div>\n          ),\n        },\n      ]}\n    />\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\nimport { gql } from 'apollo-boost'\nimport { getQueryString, getDebugQuery } from 'utils'\nimport TexasDistrictMap from 'components/TexasDistrictMap'\nimport FilterSection from 'components/FilterSection'\nimport LegislatorList from 'components/LegislatorList'\n\nconst ALL_LEG = gql`\n  query Legislator(\n    $chamber: String\n    $party: String\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n  ) {\n    legislators(\n      party: $party\n      chamber_Icontains: $chamber\n      first: $first\n      last: $last\n      after: $after\n      before: $before\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          pk\n          name\n          party\n          chamber\n          district\n          photoUrl\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nfunction LegislatorsPage() {\n  document.title = `Legislators - Influence Texas`\n  const history = useHistory()\n  const queryObj = getQueryString(history)\n\n  const chamber = queryObj.chamber\n  const party = queryObj.party\n\n  return (\n    <div>\n      <FilterSection\n        title={<Typography variant=\"h6\">Texas Legislators</Typography>}\n        tags={{\n          chamber: [\n            { name: 'House', value: 'HOUSE' },\n            { name: 'Senate', value: 'SENATE' },\n          ],\n          party: [\n            { name: 'Democrat', value: 'D' },\n            { name: 'Republican', value: 'R' },\n          ],\n        }}\n      />\n      <div className=\"two-column\">\n        <TexasDistrictMap chamber={chamber} style={{ flexGrow: 1 }} />\n        <LegislatorList\n          title={'All Legislators'}\n          gqlQuery={ALL_LEG}\n          gqlVariables={{ chamber, party }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default LegislatorsPage\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst LogoWrapper = styled.header`\n  text-transform: uppercase;\n  && {\n    color: black;\n  }\n  &&,\n  p {\n    font-size: 2rem !important;\n    display: inline-block;\n    font-weight: bold;\n  }\n`\n\nexport default function Logo() {\n  return (\n    <Link to=\"/\">\n      <LogoWrapper>\n        <Typography color=\"primary\">Influence</Typography> Texas\n      </LogoWrapper>\n    </Link>\n  )\n}\n","// Imports\nimport React, { useState } from 'react'\nimport Autocomplete from 'react-google-autocomplete'\nimport queryString from 'query-string'\nimport { Typography } from '@material-ui/core'\nimport Script from 'react-load-script'\nimport { useHistory } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport { setQueryString, getQueryString, getDebugQuery } from 'utils'\nimport LegislatorsList from 'components/LegislatorList'\n\nconst GOOGLE_API = process.env.REACT_APP_GOOGLE_API_KEY\n\nconst GET_LEG_BY_DISTRICT = gql`\n  query Legislator($district: Int, $chamber: String) {\n    legislators(district: $district, chamber_Icontains: $chamber) {\n      edges {\n        node {\n          pk\n          name\n          party\n          chamber\n          photoUrl\n          url\n          district\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nfunction FindRepResults() {\n  document.title = `Find Reps - Influence Texas`\n  const history = useHistory()\n  const query = getQueryString(history)\n  const houseData = useQuery(GET_LEG_BY_DISTRICT, {\n    variables: { district: query.house || 0, chamber: 'house' },\n  })\n  const senateData = useQuery(GET_LEG_BY_DISTRICT, {\n    variables: { district: query.senate || 0, chamber: 'senate' },\n  })\n  if (!houseData.data || !senateData.data) return null\n  const totalCount =\n    houseData.data.legislators.edges.length +\n    senateData.data.legislators.edges.length\n  const edges = [\n    ...houseData.data.legislators.edges,\n    ...senateData.data.legislators.edges,\n  ]\n  if (!totalCount && Object.keys(query).length)\n    return (\n      <div style={{ marginTop: '1rem', opacity: 0.5 }}>\n        None found, make sure the address is specific enough\n      </div>\n    )\n  if (!totalCount) return null\n\n  return (\n    <LegislatorsList\n      data={{\n        edges,\n        totalCount,\n      }}\n    />\n  )\n}\n\nexport default function FindReps() {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const history = useHistory()\n  return (\n    <div style={{ marginTop: '1rem' }}>\n      <Typography variant=\"h6\">Find Your Representatives</Typography>\n      <Script\n        url={`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_API}&libraries=places`}\n        onLoad={() => setIsLoaded(true)}\n      />\n      {isLoaded && (\n        // giving the classes copied from the output make consistent with the react material ui components\n        <div\n          style={{ marginTop: '1rem' }}\n          className=\"MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-adornedStart\"\n        >\n          <Autocomplete\n            className=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart\"\n            onPlaceSelected={({ formatted_address }) => {\n              const params = {\n                key: GOOGLE_API,\n                address: formatted_address,\n                includeOffices: false,\n                roles: ['legislatorUpperBody', 'legislatorLowerBody'],\n              }\n              fetch(\n                `https://www.googleapis.com/civicinfo/v2/representatives?${queryString.stringify(\n                  params,\n                )}`,\n              )\n                .then((res) => res.json())\n                .then((res) => {\n                  if (!res.divisions) return\n                  let house = ''\n                  let senate = ''\n                  Object.values(res.divisions).forEach((str) => {\n                    if (str.name.includes('House')) {\n                      house = str.name\n                        .replace('Texas State House district', '')\n                        .trim()\n                    }\n                    if (str.name.includes('Senate')) {\n                      senate = str.name\n                        .replace('Texas State Senate district', '')\n                        .trim()\n                    }\n                  })\n                  setQueryString({ house, senate }, history)\n                })\n            }}\n            types={['address']}\n          />\n        </div>\n      )}\n      <FindRepResults />\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { PieChart, Pie, Tooltip, Cell } from 'recharts'\nimport { numberWithCommas } from 'utils'\nimport { legTheme } from 'theme'\n\nconst Wrapper = styled.div`\n  .large {\n    font-size: 50px;\n    font-weight: bold;\n  }\n  .recharts-default-legend {\n    margin-top: 50px !important;\n  }\n  .recharts-wrapper {\n    margin: auto;\n  }\n`\n\n/**\n * @typedef {Object} Props\n * @property {Array<{ name: string, color: string, value: number}>} data - slices of the chart\n * @property {Number} totalCount - Total for middle\n */\n\n/**\n * @param {Props} props\n */\nfunction DonutChart({\n  data = [{ name: 'loading', value: 100 }],\n  totalCount = 0,\n  totalText = 'Total',\n  selectedSlice = '',\n  loading,\n}) {\n  const CHART_WIDTH = 440\n  const props = {\n    data,\n    cx: CHART_WIDTH / 2,\n    cy: CHART_WIDTH / 2,\n    paddingAngle: 2,\n    dataKey: 'value',\n  }\n  return (\n    <Wrapper>\n      <PieChart width={CHART_WIDTH} height={CHART_WIDTH}>\n        <Pie\n          {...props}\n          innerRadius={200}\n          outerRadius={210}\n          fill={legTheme.palette.primary.main}\n        >\n          {data.map((entry, index) => {\n            return (\n              <Cell\n                key={`cell-${index}`}\n                fill={entry.name === selectedSlice ? '#ccc' : 'white'}\n              />\n            )\n          })}\n        </Pie>\n        <Pie\n          {...props}\n          innerRadius={180}\n          outerRadius={200}\n          fill={loading ? '#ccc' : legTheme.palette.primary.main}\n        ></Pie>\n\n        <text x={CHART_WIDTH / 2} y={CHART_WIDTH / 2 + 20} textAnchor=\"middle\">\n          {loading ? (\n            'loading'\n          ) : (\n            <>\n              <tspan className=\"large\">{numberWithCommas(totalCount)} </tspan>{' '}\n              {totalText}\n            </>\n          )}\n        </text>\n        <Tooltip />\n      </PieChart>\n    </Wrapper>\n  )\n}\n\nexport default DonutChart\n","import React from 'react'\nimport { format } from 'date-fns'\nimport PaginatedList from 'components/PaginatedList'\nimport { BillSquare } from 'styles'\n\nfunction BillList({ data, ...props }) {\n  return (\n    <PaginatedList\n      {...props}\n      url=\"bills/bill\"\n      data={data}\n      emptyState={<div>No bills found</div>}\n      columns={[\n        {\n          render: (rowData) => <BillSquare billId={rowData.node.billId} />,\n        },\n        {\n          render: (rowData) => (\n            <div>\n              {rowData.node.actionDates && (\n                <div style={{ float: 'right', textAlign: 'right' }}>\n                  {format(\n                    new Date(rowData.node.actionDates.edges[0].node.date),\n                    `MMM d`,\n                  )}\n                  <div>\n                    {format(\n                      new Date(rowData.node.actionDates.edges[0].node.date),\n                      `yyy`,\n                    )}\n                  </div>\n                </div>\n              )}\n              <span style={{ opacity: 0.5 }}>Relating to</span>\n              {rowData.node.title.replace('Relating to', '')}\n            </div>\n          ),\n        },\n      ]}\n    />\n  )\n}\n\nexport default BillList\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\nimport DonutChart from 'components/DonutChart'\nimport BillList from 'components/BillList'\nimport FilterSection from 'components/FilterSection'\nimport { gql } from 'apollo-boost'\nimport { getQueryString, dashesToSpaces, getDebugQuery } from 'utils'\n\nconst ALL_BILLS = gql`\n  query AllBills(\n    $chamber: String\n    $classification: String\n    $party: String\n    $multipleSponsors: Boolean\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n  ) {\n    bills(\n      chamber_Icontains: $chamber\n      classification: $classification\n      multipleSponsors: $multipleSponsors\n      party: $party\n      first: $first\n      last: $last\n      after: $after\n      before: $before\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          pk\n          chamber\n          billId\n          title\n        }\n      }\n    }\n    billClassificationStats(\n      chamber: $chamber\n      multipleSponsors: $multipleSponsors\n      party: $party\n    ) {\n      name\n      count\n    }\n    ${getDebugQuery()}\n  }\n`\n\nfunction BillsPage() {\n  document.title = `Bills - Influence Texas`\n  const history = useHistory()\n  const { page, first, last, before, after, ...queryObj } = getQueryString(\n    history,\n  )\n  const [listData, setListData] = useState()\n\n  const billClassificationStats = listData\n    ? listData.billClassificationStats\n    : []\n  const classificationTags = billClassificationStats.map((d) => ({\n    name: dashesToSpaces(d.name),\n    value: d.name,\n    group: 'classification',\n  }))\n  const summaryData =\n    listData &&\n    billClassificationStats.map((d) => ({\n      name: dashesToSpaces(d.name),\n      value: d.count,\n    }))\n\n  return (\n    <div>\n      <FilterSection\n        title={\n          <Typography variant=\"h6\" style={{ minWidth: '150px' }}>\n            Texas Bills\n          </Typography>\n        }\n        tags={{\n          chamber: [\n            { name: 'House', value: 'HOUSE' },\n            { name: 'Senate', value: 'SENATE' },\n          ],\n          party: [\n            { name: 'Republican', value: 'R' },\n            { name: 'Bipartisan', value: 'Bipartisan' },\n            { name: 'Democratic', value: 'D' },\n          ],\n          multipleSponsors: [{ name: 'Many Sponsors', value: true }],\n          classification: classificationTags,\n        }}\n      />\n      <div className=\"two-column\">\n        <DonutChart\n          data={summaryData}\n          totalCount={listData ? listData.bills.totalCount : 0}\n          totalText=\"Bills\"\n          selectedSlice={dashesToSpaces(queryObj.classification)}\n          loading={!listData}\n        />\n        <BillList\n          gqlQuery={ALL_BILLS}\n          gqlVariables={queryObj}\n          title=\"All Bills\"\n          onDataFetched={setListData}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default BillsPage\n","import React from 'react'\nimport PaginatedList from 'components/PaginatedList'\nimport { RoundSquare } from 'styles'\nimport { formatMoney } from 'utils'\n\nfunction getInitials(name) {\n  try {\n    return name[0] + name.split(' ')[1][0]\n  } catch (e) {\n    return name && name[0]\n  }\n}\n\nfunction DonorList({ data, ...props }) {\n  return (\n    <div>\n      <PaginatedList\n        {...props}\n        url=\"donors/donor\"\n        data={data}\n        emptyState={<div>No donors found</div>}\n        columns={[\n          {\n            field: 'node.short_name',\n            render: (rowData) => (\n              <div style={{ display: 'flex' }}>\n                <RoundSquare>{getInitials(rowData.node.fullName)}</RoundSquare>\n                <div style={{ marginLeft: '1rem', flexGrow: 1 }}>\n                  {rowData.node.fullName}\n                  <div style={{ opacity: 0.5 }}>\n                    {rowData.node.occupation}\n                    {rowData.node.occupation && rowData.node.employer && ' ・ '}\n                    {rowData.node.employer}\n                  </div>\n                </div>\n                <div style={{ textAlign: 'right' }}>\n                  {formatMoney(rowData.node.totalContributions)}\n                  <div style={{ opacity: 0.5 }}>\n                    {rowData.node.city}, {rowData.node.state}\n                  </div>\n                </div>\n              </div>\n            ),\n          },\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default DonorList\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { gql } from 'apollo-boost'\nimport { Typography } from '@material-ui/core'\nimport DonorList from 'components/DonorList'\nimport DonutChart from 'components/DonutChart'\nimport FilterSection from 'components/FilterSection'\nimport { getQueryString, getDebugQuery } from 'utils'\n\nconst ALL_DONORS = gql`\n  query AllDonors(\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n    $inState: Boolean\n  ) {\n    donors(\n      first: $first\n      last: $last\n      after: $after\n      before: $before\n      inState: $inState\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          pk\n          fullName\n          city\n          state\n          employer\n          occupation\n          totalContributions\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nfunction DonorsPage() {\n  document.title = `Donors - Influence Texas`\n  const [listData, setListData] = useState()\n  const history = useHistory()\n  const { page, first, last, before, after, ...queryObj } = getQueryString(\n    history,\n  )\n\n  const summaryData = [\n    { name: 'donors', value: listData ? listData.donors.totalCount : 1 },\n  ]\n\n  let selectedSlice\n  if (typeof queryObj.inState === 'boolean') {\n    if (queryObj.inState) {\n      selectedSlice = 'In State'\n    } else {\n      selectedSlice = 'Out Of State'\n    }\n  }\n  return (\n    <div>\n      <FilterSection\n        title={\n          <Typography variant=\"h6\" style={{ minWidth: '150px' }}>\n            Texas Donors\n          </Typography>\n        }\n        tags={{\n          inState: [\n            { name: 'In state', value: true },\n            { name: 'Out of state', value: false },\n          ],\n        }}\n      />\n      <div className=\"two-column\">\n        <DonutChart\n          data={summaryData}\n          totalCount={listData ? listData.donors.totalCount : 0}\n          totalText={'Donors'}\n          selectedSlice={selectedSlice}\n          loading={!listData}\n        />\n        <DonorList\n          gqlQuery={ALL_DONORS}\n          title=\"Donors\"\n          onDataFetched={setListData}\n          gqlVariables={queryObj}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default DonorsPage\n","import React from 'react'\n\nfunction PolicyAreasPage() {\n  return <div>PolicyAreasPage</div>\n}\n\nexport default PolicyAreasPage\n","import React, { useEffect } from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport { getQueryString, setQueryString } from 'utils'\n\nexport const TabWrapper = styled.div`\n  button {\n    border-bottom: solid !important;\n    border-bottom-style: inset !important;\n  }\n`\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </Typography>\n  )\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default function SimpleTabs({ tabs = [], startTabIdx = 0, saveToUrl }) {\n  const [value, setValue] = React.useState(startTabIdx)\n  const history = useHistory()\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n    if (saveToUrl) {\n      const queryObj = getQueryString(history)\n      // need to clear out old pagination for search page\n      setQueryString({ tab: newValue }, history)\n    }\n  }\n\n  const tabQueryString = getQueryString(history).tab\n\n  useEffect(() => {\n    if (saveToUrl && tabQueryString) {\n      setValue(tabQueryString)\n    } else {\n      setValue(startTabIdx)\n    }\n  }, [startTabIdx, tabQueryString, saveToUrl])\n\n  return (\n    <TabWrapper>\n      <div position=\"static\" style={{ margin: '1em 0' }}>\n        <Tabs\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={value}\n          onChange={handleChange}\n        >\n          {tabs.map((t, i) => (\n            <Tab key={t.label} label={t.label} {...a11yProps(i)} />\n          ))}\n        </Tabs>\n      </div>\n      {tabs.map((t, i) => (\n        <TabPanel key={i} value={value} index={i}>\n          {t.content}\n        </TabPanel>\n      ))}\n    </TabWrapper>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link as MaterialLink } from '@material-ui/core'\n\nexport default function CustomLink({ to, children }) {\n  const history = useHistory()\n  return (\n    <MaterialLink\n      style={{ cursor: 'pointer' }}\n      onClick={() => history.push(to)}\n    >\n      {children}\n    </MaterialLink>\n  )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport { Typography, Button } from '@material-ui/core'\n\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\nimport SimpleTabs from 'components/SimpleTabs'\nimport PaginatedList, { LoadingListItem } from 'components/PaginatedList'\nimport BillList from 'components/BillList'\nimport TexasDistrictMap from 'components/TexasDistrictMap'\nimport CustomLink from 'components/CustomLink'\nimport { formatMoney, getDebugQuery } from 'utils'\nimport { ImageSquare } from 'styles'\n\nconst GET_LEG = gql`\n  query Legislator($id: Int!) {\n    legislator(pk: $id) {\n      pk\n      name\n      party\n      chamber\n      photoUrl\n      url\n      district\n      contributions {\n        edges {\n          node {\n            cycleTotal\n            donor {\n              pk\n              fullName\n              city\n              state\n              employer\n              occupation\n            }\n          }\n        }\n      }\n      billsSponsored {\n        totalCount\n        edges {\n          node {\n            pk\n            billId\n            title\n          }\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nfunction LegislatorDetailPage() {\n  const { id } = useParams()\n  const { data, loading, error } = useQuery(GET_LEG, {\n    variables: { id },\n  })\n  document.title = `${data ? data.legislator.name : ''} - Influence Texas`\n  if (error) {\n    return 'server error'\n  }\n  const fullLegData = data ? data.legislator : {}\n  return (\n    <div className=\"detail-page\">\n      <CustomLink to=\"/legislators\"> ← All Legislators</CustomLink>\n      {loading ? (\n        <div>{LoadingListItem}</div>\n      ) : (\n        <div style={{ display: 'flex', margin: '1em 0' }}>\n          <ImageSquare photoUrl={fullLegData.photoUrl} />\n          <div style={{ margin: '0 1em', flexGrow: 1 }}>\n            <Typography variant=\"h5\">{fullLegData.name}</Typography>\n            <div style={{ textTransform: 'capitalize' }}>\n              {fullLegData.chamber && fullLegData.chamber.toLowerCase()} (\n              {fullLegData.party})\n            </div>\n            <div>District {fullLegData.district}</div>\n          </div>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            href={fullLegData.url}\n            target=\"_blank\"\n            style={{ height: 'fit-content' }}\n          >\n            <OpenInNewIcon fontSize=\"small\" />{' '}\n            <Typography variant=\"h6\">Full Biography</Typography>\n          </Button>\n        </div>\n      )}\n\n      <SimpleTabs\n        saveToUrl\n        tabs={[\n          {\n            label: `Top Donors (${\n              loading ? 'loading' : fullLegData.contributions.edges.length\n            })`,\n            content: (\n              <div>\n                <PaginatedList\n                  url=\"donors/donor\"\n                  pk=\"node.donor.pk\"\n                  title=\"Top Donors\"\n                  data={fullLegData.contributions}\n                  totalCount={\n                    !loading && fullLegData.contributions.edges.length\n                  }\n                  columns={[\n                    {\n                      render: (rowData) => {\n                        return (\n                          <div>\n                            {rowData.node.donor.fullName}\n                            <div style={{ opacity: 0.5 }}>\n                              {rowData.node.donor.occupation}\n                              {rowData.node.donor.occupation &&\n                                rowData.node.donor.employer &&\n                                ' ・ '}\n                              {rowData.node.donor.employer}\n                            </div>\n                          </div>\n                        )\n                      },\n                    },\n                    {\n                      render: (rowData) => {\n                        return (\n                          <div style={{ textAlign: 'right' }}>\n                            {formatMoney(rowData.node.cycleTotal)}\n                            <div style={{ opacity: 0.5 }}>\n                              {rowData.node.donor.city},{' '}\n                              {rowData.node.donor.state}\n                            </div>\n                          </div>\n                        )\n                      },\n                    },\n                  ]}\n                  loading={loading}\n                  rowsPerPage={100}\n                />\n              </div>\n            ),\n          },\n          {\n            label: `Bills Sponsored (${\n              loading ? 'loading' : fullLegData.billsSponsored.totalCount\n            })`,\n            content: (\n              <div>\n                <BillList\n                  title=\"Bills Sponsored\"\n                  data={fullLegData.billsSponsored}\n                  rowsPerPage={100}\n                  loading={loading}\n                />\n              </div>\n            ),\n          },\n          {\n            label: 'District Map',\n            content: (\n              <div>\n                <TexasDistrictMap\n                  chamber={fullLegData.chamber}\n                  district={fullLegData.district}\n                  loading={loading}\n                />\n              </div>\n            ),\n          },\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default LegislatorDetailPage\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport Typography from '@material-ui/core/Typography'\nimport PaginatedList, { ShortLoadingListBody } from './PaginatedList'\nimport { formatMoney, getDebugQuery } from 'utils'\nimport CustomLink from 'components/CustomLink'\nimport { BlankLoadingLine } from 'styles'\nimport { RoundSquare } from 'styles'\nimport { legTheme } from 'theme'\n\nconst GET_DONOR = gql`\n  query Donor($id: Int!) {\n    donor(pk: $id) {\n      fullName\n      totalContributions\n      city\n      state\n      employer\n      occupation\n      donations {\n        cycleTotal\n        candidateName\n        office\n        party\n        legId\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nfunction DonorDetailPage() {\n  const { id } = useParams()\n  const { data, loading, error } = useQuery(GET_DONOR, {\n    variables: { id },\n  })\n  document.title = `${data ? data.donor.fullName : ''} - Influence Texas`\n  if (error) {\n    return 'server error'\n  }\n  const fullDonorData = data ? data.donor : {}\n  return (\n    <div className=\"detail-page\">\n      <CustomLink to=\"/donors\"> ← All Donors</CustomLink>\n      <section style={{ margin: '1rem' }}>\n        <h1>\n          {loading ? <BlankLoadingLine width=\"40%\" /> : fullDonorData.fullName}\n        </h1>\n        <div>\n          {loading ? (\n            <BlankLoadingLine width=\"20%\" />\n          ) : (\n            `Total Contributions: ${formatMoney(\n              fullDonorData.totalContributions,\n            )}`\n          )}\n        </div>\n        {fullDonorData.occupation}{' '}\n        {fullDonorData.occupation && fullDonorData.employer && 'at'}{' '}\n        {fullDonorData.employer}\n        <div>\n          {fullDonorData.city}, {fullDonorData.state}\n        </div>\n      </section>\n      <PaginatedList\n        url=\"legislators/legislator\"\n        pk=\"legId\"\n        data={\n          loading\n            ? null\n            : {\n                edges: fullDonorData.donations,\n                totalCount: fullDonorData.donations.length,\n              }\n        }\n        columns={[\n          {\n            render: (rowData) => (\n              <div style={{ display: 'flex' }}>\n                <RoundSquare\n                  style={{\n                    marginTop: 10,\n                    width: 20,\n                    height: 20,\n                    background: rowData.legId\n                      ? legTheme.palette.primary.main\n                      : '#bbb',\n                  }}\n                />\n                <div style={{ margin: '0 1em' }}>\n                  <Typography>{rowData.candidateName}</Typography>\n                  <Typography variant=\"subtitle2\">\n                    {rowData.office} {rowData.party ? `(${rowData.party})` : ''}\n                  </Typography>\n                </div>\n              </div>\n            ),\n          },\n          {\n            render: (rowData) => (\n              <div style={{ textAlign: 'right' }}>\n                {formatMoney(rowData.cycleTotal)}\n              </div>\n            ),\n          },\n        ]}\n        showHover={(rowData) => !!rowData.legId}\n        loading={loading}\n        loadingListBody={ShortLoadingListBody}\n        rowsPerPage={500}\n      />\n    </div>\n  )\n}\n\nexport default DonorDetailPage\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport { format } from 'date-fns'\nimport { Typography, Button } from '@material-ui/core'\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\nimport PaginatedList, {\n  LoadingListItem,\n  ShortLoadingListBody,\n} from 'components/PaginatedList'\nimport SimpleTabs from 'components/SimpleTabs'\nimport LegislatorsList from 'components/LegislatorList'\nimport CustomLink from 'components/CustomLink'\nimport { BillSquare } from 'styles'\nimport { getDebugQuery } from 'utils'\n\nconst GET_BILL = gql`\n  query Bill($id: Int!) {\n    bill(pk: $id) {\n      chamber\n      billId\n      title\n      billText\n      session\n      subjects {\n        edges {\n          node {\n            label\n          }\n        }\n      }\n      sponsors {\n        totalCount\n        edges {\n          node {\n            pk\n            name\n            party\n            chamber\n            district\n            photoUrl\n          }\n        }\n      }\n      actionDates {\n        totalCount\n        edges {\n          node {\n            classification\n            description\n            date\n          }\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nfunction BillDetailPage() {\n  const { id } = useParams()\n  const { data, loading, error } = useQuery(GET_BILL, {\n    variables: { id },\n  })\n  document.title = `${data ? data.bill.billId : ''} - Influence Texas`\n  if (error) {\n    return 'server error'\n  }\n  const fullBillData = data ? data.bill : {}\n  if (!loading) {\n    fullBillData.actionDates.edges.reverse()\n  }\n\n  return (\n    <div>\n      <CustomLink to=\"/bills\"> ← All Bills</CustomLink>\n\n      {loading ? (\n        LoadingListItem\n      ) : (\n        <div style={{ display: 'flex', margin: '1em 0' }}>\n          <BillSquare billId={fullBillData.billId} />\n          <div style={{ margin: '0 1em', flexGrow: 1 }}>\n            <Typography variant=\"h5\">{fullBillData.billId}</Typography>\n            <div style={{ textTransform: 'capitalize' }}>\n              {fullBillData.chamber && fullBillData.chamber.toLowerCase()}\n            </div>\n            <div>Session {fullBillData.session}</div>\n          </div>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            href={fullBillData.billText}\n            target=\"_blank\"\n            style={{ height: 'fit-content' }}\n          >\n            <OpenInNewIcon fontSize=\"small\" />{' '}\n            <Typography variant=\"h6\">Full Bill Text</Typography>\n          </Button>\n        </div>\n      )}\n      <div style={{ margin: '1em 0' }}>{fullBillData.title}</div>\n      <div style={{ textTransform: 'capitalize' }}>\n        {' '}\n        {fullBillData.subjects &&\n          fullBillData.subjects.edges.map((d) => {\n            const [subject, parens] = d.node.label\n              .replace(/--/g, '—')\n              .toLowerCase()\n              .split('(')\n            return (\n              <span key={d.node.label}>\n                {subject} <span style={{ opacity: 0.5 }}>({parens} </span>\n              </span>\n            )\n          })}\n      </div>\n      <SimpleTabs\n        saveToUrl\n        tabs={[\n          {\n            label: `Actions (${\n              loading ? 'loading' : fullBillData.actionDates.totalCount\n            })`,\n            content: (\n              <PaginatedList\n                data={fullBillData.actionDates}\n                title=\"Actions\"\n                className=\"no-scroll\"\n                loading={loading}\n                columns={[\n                  {\n                    field: 'node.description',\n                    render: (rowData) => (\n                      <div style={{ textTransform: 'capitalize' }}>\n                        <div\n                          style={{\n                            textTransform: 'uppercase',\n                            opacity: 0.5,\n                          }}\n                        >\n                          {rowData.node.classification.replace(/-/g, ' ')}\n                        </div>\n                        <div>{rowData.node.description}</div>\n                      </div>\n                    ),\n                  },\n                  {\n                    field: 'node.date',\n                    render: (rowData) => (\n                      <div style={{ textAlign: 'right' }}>\n                        {format(new Date(rowData.node.date), 'PP')}\n                      </div>\n                    ),\n                  },\n                ]}\n                rowsPerPage={100}\n                loadingListBody={ShortLoadingListBody}\n              />\n            ),\n          },\n          {\n            label: `Sponsors (${\n              loading ? 'loading' : fullBillData.sponsors.totalCount\n            })`,\n            content: (\n              <div className=\"detail-page\">\n                <LegislatorsList\n                  data={fullBillData.sponsors}\n                  title=\"Sponsors\"\n                  rowsPerPage={100}\n                  loading={loading}\n                />\n              </div>\n            ),\n          },\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default BillDetailPage\n","import React, { useState, useEffect } from 'react'\nimport { Input, InputAdornment } from '@material-ui/core'\nimport Search from '@material-ui/icons/Search'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport BillList from 'components/BillList'\nimport DonorList from 'components/DonorList'\nimport LegislatorList from 'components/LegislatorList'\nimport SimpleTabs from 'components/SimpleTabs'\nimport { useHistory, useParams } from 'react-router-dom'\nimport CustomLink from 'components/CustomLink'\nimport useDebounce from 'components/useDebounce'\nimport { getDebugQuery, getQueryString } from 'utils'\n\nconst ALL_SEARCH = gql`\n  query SearchAll($searchQuery: String) {\n    search(searchQuery: $searchQuery) {\n      legislators {\n        totalCount\n      }\n      bills {\n        totalCount\n      }\n      donors {\n        totalCount\n      }\n    }\n    _debug {\n      sql {\n        duration\n        sql\n      }\n    }\n  }\n`\n\nconst LEG_SEARCH = gql`\n  query LegislatorSearch(\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n    $searchQuery: String\n  ) {\n    search(searchQuery: $searchQuery) {\n      legislators(\n        first: $first\n        last: $last\n        after: $after\n        before: $before\n      ) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          cursor\n          node {\n            pk\n            name\n            party\n            chamber\n            district\n            photoUrl\n          }\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nconst BILL_SEARCH = gql`\n  query BillsSearch(\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n    $searchQuery: String\n  ) {\n    search(searchQuery: $searchQuery) {\n      bills(\n        first: $first\n        last: $last\n        after: $after\n        before: $before\n      ) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          cursor\n          node {\n            pk\n            chamber\n            billId\n            title\n          }\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nconst DONOR_SEARCH = gql`\n  query DonorsSearch(\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n    $searchQuery: String\n  ) {\n    search(searchQuery: $searchQuery) {\n      donors(\n        first: $first\n        last: $last\n        after: $after\n        before: $before\n      ) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        edges {\n          cursor\n          node {\n            pk\n            fullName\n            city\n            state\n            employer\n            employerId\n            occupation\n            totalContributions\n          }\n        }\n      }\n    }\n    ${getDebugQuery()}\n  }\n`\n\nexport function SearchResults() {\n  const { searchQuery } = useParams()\n  const history = useHistory()\n  const { tab } = getQueryString(history)\n  const gqlVariables = { searchQuery: searchQuery || '---' }\n  const { data, loading, error } = useQuery(ALL_SEARCH, {\n    variables: gqlVariables,\n  })\n  if (error) {\n    return 'server error'\n  }\n  if (loading) {\n    return 'loading'\n  }\n\n  let startTabIdx\n  if (tab === undefined) {\n    // active tab choice should be honored on back\n    if (!data.search.legislators.totalCount) {\n      startTabIdx = 1\n      if (!data.search.bills.totalCount) {\n        startTabIdx = 2\n        if (!data.search.donors.totalCount) {\n          startTabIdx = 0\n        }\n      }\n    }\n  }\n  return (\n    <div className=\"detail-page\">\n      {searchQuery && data && <CustomLink to=\"/\"> ← Clear Search</CustomLink>}\n      {searchQuery && data && (\n        <SimpleTabs\n          saveToUrl\n          startTabIdx={startTabIdx}\n          tabs={[\n            {\n              label: `Legislators (${data.search.legislators.totalCount})`,\n              content: (\n                <div>\n                  <LegislatorList\n                    gqlVariables={gqlVariables}\n                    gqlQuery={LEG_SEARCH}\n                    nestedUnder=\"search.legislators\"\n                  />\n                </div>\n              ),\n            },\n            {\n              label: `Bills (${data.search.bills.totalCount})`,\n              content: (\n                <div>\n                  <BillList\n                    gqlVariables={gqlVariables}\n                    gqlQuery={BILL_SEARCH}\n                    nestedUnder=\"search.bills\"\n                  />\n                </div>\n              ),\n            },\n            {\n              label: `Donors (${data.search.donors.totalCount})`,\n              content: (\n                <div>\n                  <DonorList\n                    gqlVariables={gqlVariables}\n                    gqlQuery={DONOR_SEARCH}\n                    nestedUnder=\"search.donors\"\n                  />\n                </div>\n              ),\n            },\n          ]}\n        />\n      )}\n    </div>\n  )\n}\n\nfunction SearchAll() {\n  document.title = 'Search - Influence Texas'\n  const history = useHistory()\n  const searchQuery = history.location.pathname.split('/searchAll/')[1]\n  const [searchVal, setSearchVal] = useState(searchQuery)\n  useEffect(() => {\n    setSearchVal(searchQuery)\n  }, [searchQuery])\n  const debouncedSearchTerm = useDebounce(searchVal, 500)\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      const newUrl = `/searchAll/${debouncedSearchTerm}`\n      if (newUrl !== history.location.pathname) {\n        history.push(`/searchAll/${debouncedSearchTerm}`)\n      }\n    } else {\n      if (history.location.pathname.includes('searchAll')) {\n        history.push('/')\n      }\n    }\n    setSearchVal(debouncedSearchTerm)\n    /* eslint-disable react-hooks/exhaustive-deps*/\n  }, [debouncedSearchTerm])\n\n  return (\n    <div className=\"site-wide-search\" style={{ margin: '1em 0' }}>\n      <Input\n        value={searchVal || ''}\n        onChange={(e) => setSearchVal(e.target.value)}\n        placeholder=\"Search\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <Search />\n          </InputAdornment>\n        }\n        fullWidth\n      />\n      <SearchResults />\n    </div>\n  )\n}\n\nexport default SearchAll\n","import { useState, useEffect } from 'react'\n\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay],\n  )\n\n  return debouncedValue\n}\n","import React from 'react'\nimport { Tabs, Tab } from '@material-ui/core'\nimport { Route, useHistory, Switch } from 'react-router-dom'\nimport LegislatorsPage from 'components/LegislatorsPage'\nimport Logo from 'components/Logo'\nimport FindReps from 'components/FindReps'\nimport BillsPage from 'components/BillsPage'\nimport DonorsPage from 'components/DonorsPage'\nimport PolicyAreasPage from 'components/PolicyAreasPage'\nimport LegislatorDetailPage from 'components/LegislatorDetailPage'\nimport DonorDetailPage from 'components/DonorDetailPage'\nimport BillDetailPage from 'components/BillDetailPage'\nimport PersonOutlineRounded from '@material-ui/icons/PersonOutlineRounded'\nimport ReceiptRounded from '@material-ui/icons/ReceiptRounded'\nimport MonetizationOnRounded from '@material-ui/icons/MonetizationOnRounded'\n// import PublicRounded from \"@material-ui/icons/PublicRounded\";\nimport SearchAll, { SearchResults } from 'components/SearchAll'\nimport { TabWrapper } from 'components/SimpleTabs'\nimport CustomLink from 'components/CustomLink'\n\nfunction Nav() {\n  const history = useHistory()\n  if (\n    history.location.pathname.includes('searchAll') ||\n    history.location.pathname.includes('findReps')\n  ) {\n    return null\n  }\n  return (\n    <TabWrapper>\n      <nav style={{ margin: '1em 0' }}>\n        <Tabs\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={history.location.pathname.split('/')[1] || 'legislators'}\n        >\n          <Tab\n            label={\n              <>\n                <PersonOutlineRounded /> Legislators\n              </>\n            }\n            value=\"legislators\"\n            onClick={() => history.push('/legislators')}\n          />\n          <Tab\n            label={\n              <>\n                <ReceiptRounded /> Bills\n              </>\n            }\n            value=\"bills\"\n            onClick={() => history.push('/bills')}\n          />\n          <Tab\n            label={\n              <>\n                <MonetizationOnRounded /> Donors\n              </>\n            }\n            value=\"donors\"\n            onClick={() => history.push('/donors')}\n          />\n        </Tabs>\n      </nav>\n    </TabWrapper>\n  )\n}\n\nexport default function Routes() {\n  return (\n    <div>\n      <Logo />\n      <div style={{ float: 'right', margin: '1.25rem 0 0 1rem' }}>\n        <CustomLink to=\"/findReps\">Find Your Reps</CustomLink>\n      </div>\n      <SearchAll />\n      <Nav />\n\n      <Switch>\n        <Route path=\"/searchAll/:searchQuery\">\n          <SearchResults />\n        </Route>\n        <Route path=\"/findReps\">\n          <FindReps />\n        </Route>\n        <Route path=\"/bills/bill/:id\">\n          <BillDetailPage />\n        </Route>\n        <Route path=\"/bills\">\n          <BillsPage />\n        </Route>\n        <Route path=\"/donors/donor/:id\">\n          <DonorDetailPage />\n        </Route>\n        <Route path=\"/donors\">\n          <DonorsPage />\n        </Route>\n        <Route path=\"/policy-areas\">\n          <PolicyAreasPage />\n        </Route>\n        <Route path=\"/legislators/legislator/:id\">\n          <LegislatorDetailPage />\n        </Route>\n        <Route path=\"/legislators\">\n          <LegislatorsPage />\n        </Route>\n        <LegislatorsPage />\n      </Switch>\n    </div>\n  )\n}\n","import React from 'react'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { legTheme } from './theme'\nimport ScrollToTop from './ScrollToTop'\nimport Routes from './Routes'\n\nconst client = new ApolloClient({\n  uri:\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:5120/graphql/'\n      : 'http://stage.influencetx.com/graphql/',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router basename=\"v2\">\n        <MuiThemeProvider theme={legTheme}>\n          <ScrollToTop>\n            <Routes />\n          </ScrollToTop>\n        </MuiThemeProvider>\n      </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}